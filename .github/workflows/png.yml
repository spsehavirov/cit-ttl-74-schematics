# This is a basic workflow to help you get started with Actions

name: PDF to PNG

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install ghostscript
        run: sudo apt install ghostscript
      - name: Change ImageMagick security policy
        run: |
          DQT='"' 
          SRC="rights=${DQT}none${DQT} pattern=${DQT}PDF${DQT}"
          RPL="rights=${DQT}read\|write${DQT} pattern=${DQT}PDF${DQT}"
          sudo sed -i "s/$SRC/$RPL/" /etc/ImageMagick-6/policy.xml
      - name: Move PDF
        run: |
          mkdir -p dist/pdf dist/png
          mv *.pdf dist/pdf/
      - name: Convert PDF to PNG (transparent)
        run: |
          cd dist/pdf
          for n in $(ls -xH *.pdf); do convert -quality 100 -density 900 -colorspace sRGB $n "${n%.*}.png"; done;
          cd ../..
      - name: Convert PDF to PNG (white)
        run: |
          cd dist/pdf
          for n in $(ls -xH *.pdf); do convert -quality 100 -density 900 -colorspace sRGB -background white -alpha off  $n "${n%.*}_flat.png"; done;
          cd ../..
      - name: Commit PNG
        id: commit
        run: |
          git config --local user.email "action[bot]@github.com"
          git config --local user.name "github-actions[bot]"
          git add .
          if [-z "$(git status --porcelain)"]; then
            echo "{push}={false}" >> $GITHUB_OUTPUT
          else
            git commit -m "[bot] converted *.pdf -> *.png"
            echo "{push}={true}" >> $GITHUB_OUTPUT
          fi
        shell: bash
      - name: Push Commit
        if: steps.commit.outputs.push == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
